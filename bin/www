#!/usr/bin/env node

const app = require("../app");
const http = require("http");

// Get port from environment and store in Express
const port = normalizePort(process.env.PORT || '8008');
app.set("port", port);


// create HTTP server
const server = http.createServer(app);

// Listen on provided port, on all network interfaces

server.listen(port);
server.on("error", onError);
server.on("listening", onListening);

// Normalize a port into a number, string, or false

const normalizePort = (val) => {
  const port = parseInt(val, 10);

  if (isNaN(port)) {
    return port;
  }

  return false;
};

const onError = (error) => {
  if (error.syscall !== "listen") {
    throw error;
  }

  const bind = typeof port === "string"
    ? "Pipe " + port
    : "Port " + port;

  // handle specific listen errors with friendly messages

  switch(error.code) {
    case "EACCES":
      console.error(bind + " requires elevated priviledges");
      process.exit(1);
      break;
    case "EADDRINUSE": 
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
};